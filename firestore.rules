rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }

    match /users/{uid} {
      allow read: if isOwner(uid);
      allow create: if isOwner(uid);
      allow update: if isOwner(uid) && request.resource.data.keys().hasOnly(['displayName','email','updatedAt','locale','createdAt']) ;
      allow delete: if false;

      match /wallet/{docId} {
        allow read: if isOwner(uid);
        allow create: if isOwner(uid) && docId == 'main' && request.resource.data.balance == 1000;
        allow update: if isOwner(uid)
                      && request.resource.data.keys().hasOnly(['balance','updatedAt'])
                      && request.resource.data.balance is int
                      && request.resource.data.balance >= 0;
        allow delete: if false;
      }

      match /transactions/{txId} {
        allow read: if isOwner(uid);
        allow create: if isOwner(uid)
                      && request.resource.data.keys().hasOnly(['type','amount','balanceAfter','reference','note','createdAt'])
                      && request.resource.data.amount is int
                      && request.resource.data.amount > 0
                      && request.resource.data.balanceAfter is int
                      && request.resource.data.balanceAfter >= 0;
        allow update, delete: if false;
      }

      match /bets/{betId} {
        allow read: if isOwner(uid);
        allow create: if isOwner(uid)
                      && request.resource.data.keys().hasOnly(['game','stake','status','payout','details','createdAt','settledAt'])
                      && request.resource.data.stake is int
                      && request.resource.data.stake > 0
                      && request.resource.data.status == 'pending'
                      && request.resource.data.payout == 0;
        allow update: if isOwner(uid)
                      && request.resource.data.status in ['won','lost','void']
                      && request.resource.data.payout is int
                      && request.resource.data.payout >= 0;
        allow delete: if false;
      }
    }
  }
}
